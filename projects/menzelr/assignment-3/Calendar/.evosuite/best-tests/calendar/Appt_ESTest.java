/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 06 22:38:23 GMT 2017
 */

package calendar;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import calendar.Appt;
import calendar.CalendarUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Appt_ESTest extends Appt_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Appt appt0 = new Appt(7, 7, 7, 2, 2, "e@<n=wBw", "e@<n=wBw");
      appt0.setStartMinute(17);
      appt0.setTitle("|R9(,n$-U\"cv4c4q\"");
      appt0.getValid();
      appt0.setStartDay(2);
      appt0.setStartHour(2);
      appt0.toString();
      appt0.setStartMinute(525);
      appt0.setTitle("calendar.CalendarUtil");
      appt0.setTitle("I_Wa");
      appt0.isRecurring();
      appt0.setRecurrence((int[]) null, (-182), (-477), (-2388));
      int[] intArray0 = new int[6];
      appt0.setRecurrence(intArray0, (-9), (-9), 0);
      intArray0[1] = (-2388);
      CalendarUtil.DaysInMonth = intArray0;
      appt0.isRecurring();
      appt0.getRecurBy();
      appt0.setStartMonth(0);
      appt0.getTitle();
      appt0.toString();
      appt0.getRecurDays();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Appt appt0 = null;
      try {
        appt0 = new Appt(12, 12, 12, 12, 12, "H5pe!wFMx", "H5pe!wFMx");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("calendar.CalendarUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, (-667), 0, 0, "", "pm");
      appt0.toString();
      appt0.setStartYear((-667));
      appt0.setStartHour((-667));
      appt0.getStartYear();
      appt0.getStartHour();
      appt0.setStartMonth(0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Appt appt0 = new Appt((-1029), 0, 0, 0, (-1029), "uH72Vdp#sT[0>", "uH72Vdp#sT[0>");
      appt0.getStartYear();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Appt appt0 = new Appt(833, 833, 833, 0, 0, "\n", (String) null);
      appt0.setStartYear(1000);
      int[] intArray0 = new int[2];
      appt0.setStartMonth(0);
      appt0.setTitle((String) null);
      // Undeclared exception!
      try { 
        appt0.setStartMonth((-3863));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3863
         //
         verifyException("calendar.CalendarUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Appt appt0 = new Appt((-1013), (-1013), 0, 0, 0, "QhHy<Uv]w{Fki,i5/", "QhHy<Uv]w{Fki,i5/");
      appt0.setStartYear(0);
      appt0.getValid();
      appt0.setTitle("QhHy<Uv]w{Fki,i5/");
      int[] intArray0 = appt0.getRecurDays();
      appt0.getStartMonth();
      appt0.setStartYear(0);
      CalendarUtil.DaysInMonth = intArray0;
      appt0.getValid();
      // Undeclared exception!
      try { 
        appt0.setStartMinute(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("calendar.CalendarUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Appt appt0 = new Appt(1, 1, 0, 1, 1, "|iu@2fU/5$GfO7pGv", "|iu@2fU/5$GfO7pGv");
      appt0.toString();
      appt0.getTitle();
      appt0.setStartYear((-2675));
      appt0.isRecurring();
      appt0.getValid();
      appt0.setStartMinute(0);
      appt0.getRecurNumber();
      appt0.getStartMonth();
      int[] intArray0 = new int[7];
      intArray0[0] = 2;
      appt0.toString();
      intArray0[1] = 0;
      CalendarUtil.DaysInMonth = intArray0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 1;
      intArray0[5] = 0;
      intArray0[6] = (-2675);
      appt0.setRecurrence(intArray0, 3, 0, (-1570));
      appt0.getStartMinute();
      appt0.isRecurring();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Appt appt0 = new Appt(24, 24, 24, 0, 0, " ,", " ,");
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 1000;
      intArray0[3] = 3961;
      CalendarUtil.DaysInMonth = intArray0;
      appt0.getTitle();
      appt0.setStartDay(13);
      appt0.setRecurrence(CalendarUtil.DaysInMonth, 0, (-239), 3961);
      appt0.getRecurNumber();
      appt0.setDescription(" ,");
      appt0.getStartMinute();
      appt0.getStartYear();
      appt0.getRecurNumber();
      appt0.setStartHour(0);
      appt0.setStartHour((-239));
      appt0.getRecurIncrement();
      appt0.getStartYear();
      // Undeclared exception!
      try { 
        appt0.setStartMonth(24);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 24
         //
         verifyException("calendar.CalendarUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Appt appt0 = new Appt((-2019), (-2019), 774, 9, 0, "gC< X", "");
      int[] intArray0 = new int[1];
      intArray0[0] = (-2019);
      appt0.setRecurrence(intArray0, (-2019), (-2262), 6);
      appt0.setStartYear(774);
      appt0.setStartDay(9);
      appt0.getStartDay();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 546, 0, (-1), "", "URl'qKIjgS!}");
      appt0.setDescription((String) null);
      appt0.setTitle("URl'qKIjgS!}");
      appt0.setStartDay((-4537));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, "Oy\"2IW", "Oy\"2IW");
      appt0.getRecurNumber();
      appt0.getStartMonth();
      appt0.getDescription();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Appt appt0 = new Appt(2, (-90), 1, 2, 1, "(KqZ+2J#Jx", "calendar.CalendarUtil");
      appt0.setStartMinute(2);
      appt0.setTitle("(KqZ+2J#Jx");
      appt0.setDescription("");
      appt0.setStartDay((-90));
      appt0.getRecurBy();
      appt0.setStartMinute((-90));
      appt0.setStartYear(1);
      appt0.setDescription("");
      appt0.getStartYear();
      appt0.getStartMinute();
      appt0.getStartHour();
      int[] intArray0 = new int[2];
      intArray0[0] = 3;
      intArray0[1] = 1;
      CalendarUtil.DaysInMonth = intArray0;
      // Undeclared exception!
      try { 
        appt0.setStartDay(2799);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("calendar.CalendarUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, (-781), "", "");
      appt0.getTitle();
      appt0.getStartMonth();
      appt0.setStartMinute(0);
      appt0.setStartMinute(0);
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 3;
      intArray0[4] = 0;
      intArray0[5] = 0;
      appt0.setRecurrence(intArray0, 0, (-2709), (-2088));
      appt0.setStartHour(991);
      appt0.getStartMinute();
      appt0.getRecurBy();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Appt appt0 = new Appt(0, (-3851), 627, 0, 0, "zt8zdGYfbxFWYUrOP0", "");
      CalendarUtil.DaysInMonth = null;
      // Undeclared exception!
      try { 
        appt0.setStartMinute(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("calendar.CalendarUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Appt appt0 = new Appt(2534, 2534, 2534, 3, 2100, "S+lcoU]^<Dgc", "S+lcoU]^<Dgc");
      appt0.setDescription("S+lcoU]^<Dgc");
      int[] intArray0 = new int[0];
      CalendarUtil.DaysInMonth = intArray0;
      // Undeclared exception!
      try { 
        appt0.setStartYear(3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("calendar.CalendarUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Appt appt0 = new Appt((-1440), 347, 347, 8, (-1440), "cs^<YN0+:|wY-*OAt", "RM]U]heYKl(r");
      appt0.setDescription("cs^<YN0+:|wY-*OAt");
      int[] intArray0 = new int[1];
      appt0.setTitle("RM]U]heYKl(r");
      appt0.setTitle("RM]U]heYKl(r");
      CalendarUtil.DaysInMonth = intArray0;
      appt0.getRecurBy();
      appt0.setTitle("cs^<YN0+:|wY-*OAt");
      appt0.getStartMinute();
      // Undeclared exception!
      try { 
        appt0.setStartHour(347);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("calendar.CalendarUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Appt appt0 = new Appt((-393), (-393), (-393), 0, 1759, "M7wGQuhOh9", "M7wGQuhOh9");
      appt0.setStartMinute((-23));
      appt0.setStartMinute(3149);
      appt0.setStartYear((-23));
      appt0.setTitle("2+ikdYh");
      appt0.setStartHour(0);
      appt0.isRecurring();
      appt0.setRecurrence((int[]) null, (-1146), 2234, (-861));
      appt0.setTitle("M7wGQuhOh9");
      appt0.getRecurNumber();
      appt0.getRecurNumber();
      appt0.toString();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Appt appt0 = new Appt(0, (-1093), (-1093), 0, (-644), "b&}", "b&}");
      appt0.getStartHour();
      appt0.setTitle("b&}");
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Appt appt0 = new Appt((-2854), (-534), 411, 0, 0, "calendar.CalendarUtil", "");
      appt0.setStartHour(1759);
      appt0.setRecurrence((int[]) null, 1, 4, 4);
      appt0.setStartYear(1759);
      appt0.setStartMinute(4);
      appt0.setStartMonth(1);
      CalendarUtil.DaysInMonth = null;
      // Undeclared exception!
      try { 
        appt0.setStartMonth(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("calendar.CalendarUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Appt appt0 = new Appt(7, 7, 7, 2, 2, "e@<n=wBw", "e@<n=wBw");
      appt0.setTitle("R9(,n$-U\"cv4c4q\"");
      CalendarUtil.DaysInMonth = null;
      appt0.getValid();
      // Undeclared exception!
      try { 
        appt0.setStartDay(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("calendar.CalendarUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Appt appt0 = new Appt(3052, 3052, 86, 7, 3052, "", "z");
      CalendarUtil.DaysInMonth = null;
      // Undeclared exception!
      try { 
        appt0.setStartHour((-5279));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("calendar.CalendarUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 2, 2, 1344, (String) null, (String) null);
      CalendarUtil.DaysInMonth = null;
      // Undeclared exception!
      try { 
        appt0.setStartYear(30);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("calendar.CalendarUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Appt appt0 = new Appt(12, 12, 12, 2, 2, "e@<n=wBw", "e@<n=wBw");
      appt0.setTitle("R9(,n$-U\"cv4c4q\"");
      appt0.getValid();
      appt0.setStartDay(2);
      appt0.toString();
      appt0.setStartYear(12);
      appt0.setStartMinute(525);
      appt0.setTitle("calendar.CalendarUtil");
      appt0.isRecurring();
      int[] intArray0 = new int[6];
      appt0.setRecurrence(intArray0, (-9), (-9), 0);
      intArray0[0] = 0;
      intArray0[1] = 12;
      intArray0[2] = 455;
      CalendarUtil.DaysInMonth = intArray0;
      appt0.isRecurring();
      appt0.getValid();
      appt0.setStartMonth(0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 2, 2, 1344, (String) null, (String) null);
      int[] intArray0 = new int[3];
      intArray0[0] = 1344;
      intArray0[1] = 2;
      intArray0[2] = 2;
      CalendarUtil.DaysInMonth = intArray0;
      appt0.setStartYear(30);
      appt0.toString();
      appt0.getRecurDays();
      appt0.toString();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Appt appt0 = new Appt(31, 5, (-1), 0, (-1), (String) null, "");
      int[] intArray0 = new int[2];
      intArray0[0] = (-1);
      appt0.setRecurrence(intArray0, 0, 5, 5);
      appt0.getTitle();
      appt0.toString();
      appt0.getRecurDays();
      appt0.getRecurDays();
      appt0.getStartMonth();
      // Undeclared exception!
      try { 
        appt0.setStartMonth((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("calendar.CalendarUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, "3ZZBsiTX7#Nx3c2m88l", "zuuAa<nyhmQiLDOw}");
      appt0.setStartDay(60);
      appt0.getStartMonth();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Appt appt0 = new Appt(0, 46, 0, 0, 2579, "WR53E\u0005HjP38PJQ", "22@hc*Z*=TmS");
      appt0.getRecurBy();
      appt0.getRecurIncrement();
      appt0.setStartYear(46);
      appt0.setStartMonth(0);
      appt0.setStartHour(2757);
      appt0.setStartHour(0);
      appt0.setStartMonth(4);
      appt0.getTitle();
      appt0.setDescription("");
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 2757;
      CalendarUtil.DaysInMonth = intArray0;
      appt0.getRecurNumber();
      appt0.setTitle(" ,");
      appt0.getStartDay();
      appt0.getStartMonth();
      // Undeclared exception!
      try { 
        appt0.setStartDay(21);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("calendar.CalendarUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 2, 2, 1344, (String) null, (String) null);
      appt0.setStartYear(2);
      appt0.toString();
      appt0.getRecurDays();
      appt0.getStartMonth();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Appt appt0 = new Appt((-1050), 3, (-1050), 3, (-1050), "", "");
      int[] intArray0 = new int[1];
      intArray0[0] = 3;
      appt0.setRecurrence(intArray0, 4049, 1407, 3);
      appt0.setStartMinute((-170));
      appt0.setStartDay((-1230));
      appt0.setStartHour(3);
      appt0.setDescription("y-};sCgJ^S@>5qr");
      appt0.setStartYear(3);
      appt0.isRecurring();
      appt0.getStartDay();
      appt0.setStartYear(4049);
      appt0.setStartMinute(636);
      appt0.setStartDay(1086);
      appt0.getRecurIncrement();
      appt0.getStartMinute();
      appt0.getRecurBy();
      appt0.getStartMonth();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Appt appt0 = new Appt(7, 7, 7, 2, 2, "e@<n=wBw", "e@<n=wBw");
      appt0.setStartMinute(17);
      appt0.setTitle("|R9(,n$-U\"cv4c4q\"");
      appt0.getValid();
      appt0.setStartDay(2);
      appt0.setStartHour(2);
      appt0.toString();
      appt0.setStartMinute(525);
      appt0.setTitle("calendar.CalendarUtil");
      appt0.setTitle("I_Wa");
      appt0.isRecurring();
      appt0.setRecurrence((int[]) null, (-182), (-477), (-2388));
      int[] intArray0 = new int[6];
      appt0.setRecurrence(intArray0, (-9), (-9), 0);
      intArray0[1] = (-2388);
      CalendarUtil.DaysInMonth = intArray0;
      appt0.isRecurring();
      appt0.toString();
      appt0.getRecurDays();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, "Oy\"2IW", "Oy\"2IW");
      appt0.setStartDay(12);
      appt0.setTitle("Oy\"2IW");
      appt0.getTitle();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Appt appt0 = new Appt(11, 16, 16, 11, 11, "", "");
      appt0.getStartMonth();
      appt0.toString();
      appt0.setStartDay((-1073));
      appt0.setStartMonth(8);
      appt0.setStartYear((-523));
      appt0.setTitle("");
      appt0.toString();
      appt0.setDescription("");
      appt0.setStartDay(2);
      appt0.setStartHour(17);
      appt0.toString();
      appt0.getDescription();
      int[] intArray0 = appt0.getRecurDays();
      CalendarUtil.DaysInMonth = intArray0;
      appt0.getDescription();
      appt0.getDescription();
      int int0 = appt0.getStartMonth();
      assertEquals(17, appt0.getStartHour());
      assertEquals(8, int0);
  }
}
